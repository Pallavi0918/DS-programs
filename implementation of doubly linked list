#include <stdio.h>
#include <stdlib.h>

struct node {
    int data;
    struct node *prev;
    struct node *next;
};

struct node *head = NULL;
struct node *tail = NULL;

void insert_at_beginning(int value) {
    struct node new_node = (struct node)malloc(sizeof(struct node));
    new_node->data = value;
    new_node->prev = NULL;
    new_node->next = head;
    if (head != NULL) {
        head->prev = new_node;
    }
    head = new_node;
    if (tail == NULL) {
        tail = head;
    }
}

void insert_at_end(int value) {
    struct node new_node = (struct node)malloc(sizeof(struct node));
    new_node->data = value;
    new_node->next = NULL;
    new_node->prev = tail;
    if (tail != NULL) {
        tail->next = new_node;
    }
    tail = new_node;
    if (head == NULL) {
        head = tail;
    }
}

void delete_at_beginning() {
    if (head == NULL) {
        return;
    }
    struct node *temp = head;
    head = head->next;
    if (head != NULL) {
        head->prev = NULL;
    }
    free(temp);
    if (head == NULL) {
        tail = NULL;
    }
}

void delete_at_end() {
    if (tail == NULL) {
        return;
    }
    struct node *temp = tail;
    tail = tail->prev;
    if (tail != NULL) {
        tail->next = NULL;
    }
    free(temp);
    if (tail == NULL) {
        head = NULL;
    }
}

void print_list() {
    struct node *temp = head;
    printf("List: ");
    while (temp != NULL) {
        printf("%d ", temp->data);
        temp = temp->next;
    }
    printf("\n");
}

int main() {
    insert_at_beginning(1);
    insert_at_beginning(2);
    insert_at_beginning(3);
    insert_at_end(4);
    insert_at_end(5);
    print_list();
    delete_at_beginning();
    delete_at_end();
    print_list();
    return 0;
}
